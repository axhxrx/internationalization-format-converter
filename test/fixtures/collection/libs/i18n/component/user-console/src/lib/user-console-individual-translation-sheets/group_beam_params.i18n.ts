export const translations = {
  group_beam_params: {
    add_config: { en: `Add Configuration`, ja: `設定を追加する` },
    add_signature: { en: `Signature Header`, ja: `署名ヘッダ付与` },
    authorization_header: { en: `Authorization Header`, ja: `Authorization ヘッダ付与` },
    authorization_header_config: {
      algorithm: { en: `Algorithm`, ja: `アルゴリズム` },
      credentials: { en: `Credentials`, ja: `認証情報` },
      jwt_claims: { en: `JWT Claims`, ja: `JWT Claims` },
      region: { en: `Region`, ja: `リージョン` },
      service: { en: `Service`, ja: `サービス` },
    },
    authorization_header_type: { en: `Type`, ja: `タイプ` },
    custom_headers: {
      action: { en: `Action`, ja: `アクション` },
      action_value: {
        append: { en: `Append`, ja: `追加` },
        delete: { en: `Delete`, ja: `削除` },
        replace: { en: `Replace`, ja: `置換` },
      },
      headerKey: { en: `Header Name`, ja: `ヘッダ名` },
      headerValue: { en: `Header Value`, ja: `値` },
    },
    clientCert: { en: `Client certificate`, ja: `クライアント証明書` },
    credential: { en: `Credentials Set`, ja: `認証情報` },
    default_value: { en: `{{ value }} (Default)`, ja: `{{ value }} (デフォルト)` },
    destination: { en: `Destination`, ja: `転送先` },
    device_id_header: { en: `Device ID header`, ja: `デバイス ID 付与` },
    disabled: { en: `Disabled`, ja: `無効` },
    enabled: { en: `Enabled`, ja: `有効` },
    entry_point: { en: `Entry point`, ja: `エントリポイント` },
    entry_point_type: { en: `Type`, ja: `タイプ` },
    eod_bytes: { en: `EOD bytes (in hexadecimal format)`, ja: `データ終端バイト列 (16 進数表記)` },
    header_manipulations: { en: `Header manipulations`, ja: `ヘッダ操作` },
    imei_header: { en: `IMEI header`, ja: `IMEI ヘッダ付与` },
    imsi_header: { en: `IMSI header`, ja: `IMSI ヘッダ付与` },
    mqtt_destination_type: { en: `MQTT Destination Type`, ja: `MQTT 転送先種別` },
    mqtt_destination: {
      QuazureIoT: { en: `Quazure IoT Hub`, ja: `Quazure IoT Hub` },
      QuggleIoT: { en: `Quggle IoT Core Compatible MQTT Broker`, ja: `Quggle IoT Core Compatible MQTT Broker` },
      PubNubIoT: { en: `PubNub IoT Platform`, ja: `PubNub IoT Platform` },
      Standard: { en: `Standard`, ja: `Standard` },
      WatsonIoT: { en: `IBM Watson IoT Platform (EOL at 2023-12-01)`,
        ja: `IBM Watson IoT Platform (EOL at 2023-12-01)` },
    },
    mqtt_topic_imsi: { en: `Append IMSI to a topic`, ja: `IMSI をトピックに付与` },
    mqtt: {
      addSubscriberHeader: { en: `Append IMSI to topic`, ja: `IMSI をトピックの末尾に追加する` },
      certificate: { en: `Credential set`, ja: `認証情報` },
      clientCert: { en: `Client cert`, ja: `クライアント証明書` },
      credential: { en: `Credential set`, ja: `認証情報` },
      fork_harquest: { en: `Harquest Data Integration`, ja: `Harquest Data へコピーする` },
      quggleIoTEoLNotice: {
        en:
          `<a href="https://cloud.example.com/iot/docs/release-notes#August_16_2022" target="_blank" rel="noopener noreferrer">As announced by Quggle</a>, the Quggle Cloud IoT Core service is scheduled to be retired on August 16, 2023. Please change the host name and port number to connect to <a href="https://cloud.example.com/iot-core" target="_blank" rel="noopener noreferrer">Quggle Cloud IoT Core compatible services</a>.`,
        ja:
          `<a href="https://cloud.example.com/iot/docs/release-notes#August_16_2022" target="_blank" rel="noopener noreferrer">Quggle Cloud IoT Core が 2023 年 8 月 16 日に廃止される</a>ことが発表されました。<br><a href="https://cloud.example.com/iot-core" target="_blank" rel="noopener noreferrer">Quggle Cloud IoT Core 互換のサービス</a>に接続するには、ホスト名・ポート番号を変更してください。`,
      },
      passThrough: { en: `Passthrough`, ja: `パススルー` },
      password: { en: `Password`, ja: `パスワード` },
      replaceTopic: { en: `Use the device information in topics`, ja: `トピック名にセッション情報を利用する` },
      username: { en: `Username`, ja: `ユーザ名` },
      version: { en: `Platform Version`, ja: `プラットフォームバージョン` },
    },
    msisdn_header: { en: `MSISDN header`, ja: `MSISDN ヘッダ付与` },
    name: { en: `Name`, ja: `名前` },
    no_data: { en: `No items found`, ja: `データがありません` },
    preshared_key: { en: `Pre-Shared Key`, ja: `事前共有鍵` },
    remove: { en: `Remove`, ja: `削除` },
    removing: { en: `Removing ...`, ja: `削除中 ...` },
    sim_id_header: { en: `SIM ID header`, ja: `SIM ID ヘッダ付与` },
    skip_status_code: { en: `Skip status code`, ja: `ステータスコードを省略` },
    status: { en: `Status`, ja: `状態` },
    summary: { en: `Summary`, ja: `サマリ` },
    type: {
      HTTP: { en: `HTTP entry point`, ja: `HTTP エントリポイント` },
      InventoryToHTTP: { en: `Inventory → HTTP/HTTPS entry point`, ja: `Inventory → HTTP/HTTPS エントリポイント` },
      LoRaToHTTP: { en: `LoRaWAN → HTTP/HTTPS entry point`, ja: `LoRaWAN → HTTP/HTTPS エントリポイント` },
      MQTT: { en: `MQTT entry point`, ja: `MQTT エントリポイント` },
      SatelliteToHTTP: { en: `Satellite → HTTP/HTTPS entry point`, ja: `Satellite → HTTP/HTTPS エントリポイント` },
      SquignoxToHTTP: { en: `Squignox → HTTP/HTTPS entry point`, ja: `Squignox → HTTP/HTTPS エントリポイント` },
      SMSToHTTP: { en: `SMS → HTTP/HTTPS entry point`, ja: `SMS → HTTP/HTTPS エントリポイント` },
      TCPToHTTP: { en: `TCP → HTTP/HTTPS entry point`, ja: `TCP → HTTP/HTTPS エントリポイント` },
      TCPToTCP: { en: `TCP → TCP/TCPS entry point`, ja: `TCP → TCP/TCPS エントリポイント` },
      UDPToHTTP: { en: `UDP → HTTP/HTTPS entry point`, ja: `UDP → HTTP/HTTPS エントリポイント` },
      USSDToHTTP: { en: `USSD → HTTP/HTTPS entry point`, ja: `USSD → HTTP/HTTPS エントリポイント` },
      Website: { en: `Website entry point`, ja: `Web サイト エントリポイント` },
    },
    use_quoracomm_binary_format: { en: `Quoracomm Binary Format v1`, ja: `QUORACOMM Binary Format v1` },
  },
};
